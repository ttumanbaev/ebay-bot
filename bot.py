import requests
import time
import telebot
import threading
import json
from bs4 import BeautifulSoup

# === –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ ===
TELEGRAM_TOKEN = "8307757903:AAH0_9SDxC2ws4S3f_bqlwo9tOpyo3nI0OY"
CHAT_ID = "886731596"

bot = telebot.TeleBot(TELEGRAM_TOKEN)

# === –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ===
TRACK_FILE = "tracked.json"

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
try:
    with open(TRACK_FILE, "r", encoding="utf-8") as f:
        tracked_items = json.load(f)
except:
    tracked_items = {}

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª ===
def save_tracked():
    with open(TRACK_FILE, "w", encoding="utf-8") as f:
        json.dump(tracked_items, f, ensure_ascii=False, indent=2)

# === –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞—Ç–∫–∞ ===
def check_stock(url):
    try:
        headers = {"User-Agent": "Mozilla/5.0"}
        response = requests.get(url, headers=headers, timeout=10)
        soup = BeautifulSoup(response.text, "html.parser")

        # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        title_tag = soup.find("h1", {"class": "x-item-title__mainTitle"})
        title = title_tag.get_text(strip=True) if title_tag else "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ"

        # –ü—Ä–æ–¥–∞–≤–µ—Ü
        seller_tag = soup.find("span", {"class": "ux-seller-section__item--seller"})
        seller = seller_tag.get_text(strip=True) if seller_tag else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü"

        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–æ–±—ã—á–Ω–æ "xx available")
        stock_span = soup.find("span", {"class": "qtyTxt"})
        if stock_span:
            stock_text = stock_span.get_text(strip=True)
            stock_number = int("".join(filter(str.isdigit, stock_text)))
        else:
            stock_number = None

        return {"title": title, "seller": seller, "stock": stock_number}

    except Exception as e:
        print("–û—à–∏–±–∫–∞:", e)
        return None

# === –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ ===
def monitor():
    while True:
        for url, item_data in tracked_items.items():
            limit = item_data.get("limit", 1)
            data = check_stock(url)
            if data and data["stock"] is not None and data["stock"] <= limit:
                bot.send_message(
                    CHAT_ID,
                    f"‚ö†Ô∏è –û—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞ —Å–Ω–∏–∑–∏–ª—Å—è!\n\n"
                    f"üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {data['seller']}\n"
                    f"üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: {data['title']}\n"
                    f"üìâ –û—Å—Ç–∞—Ç–æ–∫: {data['stock']} —à—Ç (–ª–∏–º–∏—Ç {limit})\n"
                    f"üîó {url}"
                )
        time.sleep(1800)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω

# === –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ===
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç üëã –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ eBay!\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/add <url> ‚Äì –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä (–ª–∏–º–∏—Ç —Å—Ç–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)\n"
        "/remove <url> ‚Äì —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä\n"
        "/list ‚Äì —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö\n"
        "/check <url> ‚Äì –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–≤–∞—Ä –≤—Ä—É—á–Ω—É—é\n"
        "/suppliers ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤\n"
    )

@bot.message_handler(commands=['add'])
def add_item(message):
    try:
        parts = message.text.split(maxsplit=1)
        if len(parts) < 2:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç:\n/add <url>")
            return

        url = parts[1].strip()

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
        data = check_stock(url)
        if data and data["stock"] is not None:
            limit = data["stock"]  # –ª–∏–º–∏—Ç = —Ç–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫
            tracked_items[url] = {"limit": limit}
            save_tracked()
            bot.send_message(
                message.chat.id,
                f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ!\n\n"
                f"üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {data['seller']}\n"
                f"üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: {data['title']}\n"
                f"üìâ –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {data['stock']} —à—Ç\n"
                f"üìä –õ–∏–º–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {limit}\n"
                f"üîó {url}"
            )
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ –∏–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['remove'])
def remove_item(message):
    try:
        url = message.text.split(maxsplit=1)[1].strip()
        if url in tracked_items:
            del tracked_items[url]
            save_tracked()
            bot.send_message(message.chat.id, f"‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω:\n{url}")
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è.")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç:\n/remove <url>")

@bot.message_handler(commands=['list'])
def list_items(message):
    if tracked_items:
        msg = "üìã –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã:\n"
        for url, item_data in tracked_items.items():
            limit = item_data.get("limit", 1)
            msg += f"- {url} (–ª–∏–º–∏—Ç {limit})\n"
        bot.send_message(message.chat.id, msg)
    else:
        bot.send_message(message.chat.id, "üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")

@bot.message_handler(commands=['check'])
def check_item(message):
    try:
        url = message.text.split(maxsplit=1)[1].strip()
        data = check_stock(url)
        if data:
            bot.send_message(
                message.chat.id,
                f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞:\n\n"
                f"üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {data['seller']}\n"
                f"üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: {data['title']}\n"
                f"üìâ –û—Å—Ç–∞—Ç–æ–∫: {data['stock'] if data['stock'] else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
                f"üîó {url}"
            )
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–≤–∞—Ä.")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç:\n/check <url>")

@bot.message_handler(commands=['suppliers'])
def suppliers_list(message):
    if tracked_items:
        msg = "üì¶ –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏ –∏—Ö —Ç–æ–≤–∞—Ä—ã:\n\n"
        for url, item_data in tracked_items.items():
            limit = item_data.get("limit", 1)
            data = check_stock(url)
            if data:
                msg += (
                    f"üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {data['seller']}\n"
                    f"üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: {data['title']}\n"
                    f"üìâ –û—Å—Ç–∞—Ç–æ–∫: {data['stock'] if data['stock'] else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (–ª–∏–º–∏—Ç {limit})\n"
                    f"üîó {url}\n\n"
                )
        bot.send_message(message.chat.id, msg)
    else:
        bot.send_message(message.chat.id, "üì≠ –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ.")

# === –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ ===
threading.Thread(target=monitor, daemon=True).start()

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.polling(none_stop=True)
